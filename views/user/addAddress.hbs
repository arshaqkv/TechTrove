{{> user-header}}
<div class="container mt-5 mb-5">
  <div class="row">
    <div class="col-md-3">
      {{> profile-nav}}
    </div>
    <div class="col-md-9">
      <div class="card">
        <div class="card-body">
          <h4 class="card-title">Shipping Address</h4>
          <div id="errorMessages" class="alert alert-danger d-none"></div>
          <form id="shippingAddressForm">
            <input type="hidden" name="user" value="{{user._id}}">
            <div class="form-group">
              <label for="name">Name</label>
              <input type="text" class="form-control" id="name" name="name" placeholder="Name*" >
              <span class="error" id="error-name"></span>
            </div>
            <div class="form-group">
              <label for="phone">Mobile No</label>
              <input type="number" class="form-control" id="phone" name="phone" placeholder="Mobile No*" >
              <span class="error" id="error-phone"></span>
            </div>
            <div class="form-group">
              <label for="addressLine1">Address Line 1</label>
              <input type="text" class="form-control" id="addressLine1" name="addressLine1" placeholder="Enter your address*" >
              <span class="error" id="error-addressLine1"></span>
            </div>
            <div class="form-group">
              <label for="addressLine2">Address Line 2</label>
              <input type="text" class="form-control" id="addressLine2" name="addressLine2" placeholder="Enter your address*">
              <span class="error" id="error-addressLine2"></span>
            </div>
            <div class="form-row">
              <div class="form-group col-md-6">
                <label for="city">City</label>
                <input type="text" class="form-control" id="city" name="city" placeholder="Enter your city*" >
                <span class="error" id="error-city"></span>
              </div>
              <div class="form-group col-md-6">
                <label for="state">State</label>
                <input type="text" class="form-control" id="state" name="state" placeholder="Enter your state*" >
                <span class="error" id="error-state"></span>
              </div>
              <div class="form-group col-md-6">
                <label for="pincode">Pincode</label>
                <input type="text" class="form-control" id="pincode" name="pinCode" placeholder="Enter your pincode*" >
                <span class="error" id="error-pinCode"></span>
              </div>
            </div>
            <button type="submit" class="btn btn-dark mt-3">Save Address</button>
            <a href="/address/all" type="submit" class="btn btn-dark mt-3">Cancel</a>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>
{{> footer}}



<script>
document.getElementById('shippingAddressForm').addEventListener('submit', async function(event) {
  event.preventDefault(); // Prevent the default form submission

  const form = event.target;
  const formData = new FormData(form);

  const data = {};
  formData.forEach((value, key) => {
    data[key] = value;
  });

  try {
    const response = await fetch('/address/add', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(data)
    });

    if (response.ok) {
      Swal.fire({
        icon: 'success',
        title: 'Success',
        text: 'Address saved successfully!',
        showConfirmButton: false,
        timer: 1500
      }).then(() => {
        // Redirect to address/all page
        location.href = '/address/all';
      });
    } else {
      // Handle error response
      const errorData = await response.json();
      handleErrors(errorData.errors);
    }
  } catch (error) {
    // Handle network error
    console.error('Network error:', error);
    Swal.fire({
      icon: 'error',
      title: 'Network Error',
      text: error.message
    });
  }
});

function handleErrors(errors) {
  // Clear previous error messages
  document.querySelectorAll('.error').forEach(error => error.textContent = '');

  if (errors) {
    Object.keys(errors).forEach(key => {
      showError(`error-${key}`, errors[key].msg);
    });
  }
}

function showError(elementId, message) {
  const errorElement = document.getElementById(elementId);
  if (errorElement) {
    errorElement.textContent = message;
  }
}
</script>
