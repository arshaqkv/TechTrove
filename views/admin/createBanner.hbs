{{> admin-header}}
<div class="content">
    <div class="container mt-5 mb-5">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h3>Create Banner</h3>
            <div>
                <a href="/banner" class="btn btn-outline-secondary me-2">Cancel</a>
                <button id="createBannerButton" class="btn btn-outline-primary">Add Banner</button>
            </div>
        </div>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb ms-1 mt-3">
                <li class="breadcrumb-item"><a href="/user/admin/dashboard">Dashboard</a></li>
                <li class="breadcrumb-item"><a href="/banner">Banners</a></li>
                <li class="breadcrumb-item active" aria-current="page">Create Banner</li>
            </ol>
        </nav>
        <div class="row mt-3">
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Thumbnail</h5>
                        <div class="form-group">
                            <label for="imageUpload">Photo</label>
                            <div class="image-upload">
                                <label for="fileInput">
                                    <img id="previewImage" src="https://via.placeholder.com/150" class="img-thumbnail" style="cursor:pointer;">
                                    <div class="upload-text">
                                        <p>Drag and drop image here, or click to add image</p>
                                        <button type="button" class="btn btn-primary">Add Image</button>
                                    </div>
                                </label>
                                <input type="file" id="fileInput" class="d-none" accept="image/*" onchange="handleFileSelect(event)">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-8 mt-3">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">General Information</h5>
                        <form id="addBannerForm">
                            <div class="form-group mb-3">
                                <label for="title">Title</label>
                                <input type="text" class="form-control" id="title" name="title" placeholder="Type Banner title here..." required>
                            </div>
                            <input type="hidden" id="imageData" name="imageData">
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Crop Modal -->
<div class="modal fade" id="cropModal" tabindex="-1" aria-labelledby="cropModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="cropModalLabel">Crop Image</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div>
                    <img id="cropImage" src="" alt="Image for cropping">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="cropButton">Crop</button>
            </div>
        </div>
    </div>
</div>

<!-- Include Cropper.js -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.6/cropper.min.css" rel="stylesheet">
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.6/cropper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    let cropper;

    function handleFileSelect(event) {
        const file = event.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function(e) {
                // Show modal with image
                document.getElementById('cropImage').src = e.target.result;
                $('#cropModal').modal('show');

                // Initialize cropper
                if (cropper) {
                    cropper.destroy();
                }
                cropper = new Cropper(document.getElementById('cropImage'), {
                    aspectRatio: 16 / 5,
                    viewMode: 1
                });
            };
            reader.readAsDataURL(file);
        }
    }

    document.getElementById('cropButton').addEventListener('click', function() {
        const canvas = cropper.getCroppedCanvas();
        document.getElementById('previewImage').src = canvas.toDataURL();
        document.getElementById('imageData').value = canvas.toDataURL(); // Save cropped image data
        $('#cropModal').modal('hide');
    });

    document.getElementById('createBannerButton').addEventListener('click', async function(event) {
        event.preventDefault();

        const title = document.getElementById('title').value;
        const imageData = document.getElementById('imageData').value;

        if (!title || !imageData) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Please provide both title and image.'
            });
            return;
        }

        try {
            const response = await fetch('/banner/add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ title, image: imageData })
            });

            const result = await response.json();

            if (response.ok) {
                // Show success message with SweetAlert
                Swal.fire({
                    icon: 'success',
                    title: 'Banner Added',
                    text: result.message || 'Banner created successfully!',
                    showConfirmButton: false,
                    timer: 2000
                }).then(() => {
                    // Redirect to banners page
                    window.location.href = '/banner';
                });
            } else {
                // Show error message with SweetAlert
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: result.message || 'An error occurred while adding the banner.'
                });
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'An error occurred while adding the banner.'
            });
        }
    });
</script>
