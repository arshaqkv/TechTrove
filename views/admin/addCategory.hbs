{{> admin-header}}
<div class="content">
    <div class="container mt-5">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h3>Add Category</h3>
            <div>
                <a href="/prod/category" class="btn btn-outline-secondary me-2">Cancel</a>
                <button id="addCategoryButton" class="btn btn-outline-primary">Add Category</button>
            </div>
        </div>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb ms-1 mt-3">
                <li class="breadcrumb-item"><a href="/user/admin/dashboard">Dashboard</a></li>
                <li class="breadcrumb-item"><a href="/prod/category">Categories</a></li>
                <li class="breadcrumb-item active" aria-current="page">Add Category</li>
            </ol>
        </nav>
        <div class="row mt-3">
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Thumbnail</h5>
                        <div class="form-group">
                            <label for="imageUpload">Photo</label>
                            <div class="image-upload">
                                <label for="fileInput">
                                    <img id="previewImage" src="https://via.placeholder.com/150" class="img-thumbnail" style="cursor:pointer;">
                                    <div class="upload-text">
                                        <p>Drag and drop image here, or click add image</p>
                                        <button type="button" class="btn btn-primary">Add Image</button>
                                    </div>
                                </label>
                                <input type="file" id="fileInput" class="d-none" accept="image/*" onchange="previewImage(event)">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-8">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">General Information</h5>
                        <form id="addCategoryForm">
                            <div class="form-group mb-3">
                                <label for="categoryName">Category Name</label>
                                <input type="text" class="form-control" id="categoryName" name="title" placeholder="Type category name here..." required>
                            </div>
                            <div id="errorMessage" class="alert alert-danger d-none" role="alert">
                                Category already exists.
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    document.getElementById('addCategoryButton').addEventListener('click', async function(event) {
        event.preventDefault();
        
        const categoryName = document.getElementById('categoryName').value;

        const validNameRegex = /^[a-zA-Z\s]+$/;

        if (categoryName.trim() === '') {
            Swal.fire({
                icon: 'error',
                title: 'Empty Category Name',
                text: 'Please enter a category name.'
            });
            return;
        }

        if (!validNameRegex.test(categoryName)) {
            Swal.fire({
                icon: 'error',
                title: 'Invalid Category Name',
                text: 'Please enter a valid category name.'
            });
            return;
        }


        try {
            const response = await fetch('/prod/category/add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ title: categoryName })
            });

            const result = await response.json();

            if (response.ok) {
                // Show success message with SweetAlert
                Swal.fire({
                    icon: 'success',
                    title: 'Category Added',
                    text: result.message || 'Category created successfully!',
                    showConfirmButton: false,
                    timer: 2000
                }).then(() => {
                    // Redirect to categories page
                    window.location.href = '/prod/category';
                });
            } else {
                // Show error message with SweetAlert
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: result.message || 'An error occurred while adding the category.'
                });
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'An error occurred while adding the category.'
            });
        }
    });

    function previewImage(event) {
        const file = event.target.files[0];
        const reader = new FileReader();
        reader.onload = function(e) {
            document.getElementById('previewImage').src = e.target.result;
        }
        reader.readAsDataURL(file);
    }
</script>
