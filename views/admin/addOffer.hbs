
{{> admin-header}}
<div class="content">
    <div class="container mt-5">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h3>Add Offer</h3>
            <div>
                <a href="/offers" class="btn btn-outline-secondary me-2">Cancel</a>
                <button form="offerForm" class="btn btn-outline-primary">Add Offer</button>
            </div>
        </div>
        <div>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb  mt-3 ms-1">
                    <li class="breadcrumb-item"><a href="/user/admin/dashboard">Dashboard</a></li>
                    <li class="breadcrumb-item"><a href="/offers">Offers</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Add Offer</li>
                </ol>
            </nav>
        </div>
        
            <div class="col-md-8 mt-4 mb-5 ms-auto me-auto">
                <div class="card">
                    <div class="card-body">
                        {{!-- <h5 class="card-title">General Information</h5> --}}
                        <h5 class="mb-4">Add Offer</h5>
                        <form id="offerForm" action="/offers/add" method="post">          
                            <div class="form-group mb-3">
                                <label for="offerTarget">Offer Target:</label>
                                <select id="offerTarget" name="offerTarget" class="form-control form-select" onchange="toggleTargetOptions()">
                                    <option value="">Select Target</option>
                                    <option value="Product">Product</option>
                                    <option value="Category">Category</option>
                                </select>
                                <span class="error" id="error-offerTarget"></span>
                            </div>
                            <div class="form-group" id="productSelect" style="display: none;">
                                <label for="productId">Product</label>
                                <select id="productId" name="targetId" class="form-control form-select">
                                    <option value="">Select Product</option>
                                    {{#each products}}
                                    <option value="{{this._id}}">{{this.title}}</option>
                                    {{/each}}
                                </select>
                                <span class="error" id="error-targetId"></span>
                            </div>

                            <div class="form-group" id="categorySelect" style="display: none;">
                                <label for="categoryId">Category</label>
                                <select id="categoryId" name="targetId" class="form-control form-select">
                                    <option value="">Select Category</option>
                                    {{#each categories}}
                                    <option value="{{this._id}}">{{this.title}}</option>
                                    {{/each}}
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="discountPercentage">Discount Percentage:</label>
                                <input type="number" id="discountPercentage" name="discountPercentage" class="form-control">
                            </div>
                            
                            <div class="form-group">
                                <label for="startDate">Start Date:</label>
                                <input type="date" id="startDate" name="startDate" class="form-control" required>
                            </div>
                            
                            <div class="form-group">
                                <label for="expiryDate">Expiry Date:</label>
                                <input type="date" id="expiryDate" name="expiryDate" class="form-control" required>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    function toggleTargetOptions() {
        const offerTarget = document.getElementById('offerTarget').value;
        const productSelect = document.getElementById('productSelect');
        const categorySelect = document.getElementById('categorySelect');
        const productId = document.getElementById('productId');
        const categoryId = document.getElementById('categoryId');
        document.querySelectorAll('.error').forEach(error => error.textContent = '');
        if (offerTarget === 'Product') {
            productSelect.style.display = 'block';
            categorySelect.style.display = 'none';
            productId.disabled = false;
            categoryId.disabled = true;
        } else if (offerTarget === 'Category') {
            productSelect.style.display = 'none';
            categorySelect.style.display = 'block';
            productId.disabled = true;
            categoryId.disabled = false;
        } else {
            productSelect.style.display = 'none';
            categorySelect.style.display = 'none';
            productId.disabled = true;
            categoryId.disabled = true;
        }
    }

    const validateOfferForm = ()=>{

        const discountPercentage = document.getElementById('discountPercentage').value
        const startDate = document.getElementById('startDate').value;
        const expiryDate = document.getElementById('expiryDate').value;

        const today = new Date();
        const start = new Date(startDate);
        const expiry = new Date(expiryDate);
        today.setHours(0, 0, 0, 0);
        
        if (discountPercentage < 1 || discountPercentage > 99) {
            Swal.fire({
                icon: 'error',
                title: 'Invalid Discount',
                text: 'Discount percentage must be between 1 and 99.',
            });
            return false; 
        }

        if (start < today) {
            Swal.fire({
                icon: 'warning',
                title: 'Invalid Start Date',
                text: 'Start date must be today or later.',
            });
            return false; 
        }

        // Check start date is earlier than expiry date
        if (start >= expiry) {
            Swal.fire({
                icon: 'warning',
                title: 'Invalid Dates',
                text: 'Start date must be earlier than the expiry date.',
            });
            return false; 
        }
        return true
    }

   document.getElementById('offerForm').addEventListener('submit', async function(event) {
        event.preventDefault(); // Prevent default form submission

            if (!validateOfferForm()) {
                return;
            }


        const form = event.target;
        const formData = new FormData(form);
        const formObject = Object.fromEntries(formData.entries());

        try {
            const response = await fetch(form.action, {
                method: form.method,
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(formObject),
            });

            if (!response.ok) {
                const errorData = await response.json();
                handleErrors(errorData.errors);
            } else {
                const successData = await response.json();
                Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: successData.message,
                }).then(() => {
                    window.location.href = '/offers';
                });
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'An error occurred while creating the offer.',
            });
        }
    });

    function handleErrors(errors) {
        // Clear previous error messages
        document.querySelectorAll('.error').forEach(error => error.textContent = '');

        if (errors) {
            Object.keys(errors).forEach(key => {
            showError(`error-${key}`, errors[key].msg);
            }); 
        }
    }

    function showError(elementId, message) {
        const errorElement = document.getElementById(elementId);
        if (errorElement) {
            errorElement.textContent = message;
        }
    }

    </script>